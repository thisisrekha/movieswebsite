{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{addToFavorites,removeFromFavorites}from'../redux/actions/favoriteActions';import'./MoviesComponent.css';// Ensure this CSS file exists\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MoviesComponent=()=>{const[movies,setMovies]=useState([]);const apiUrl=process.env.REACT_APP_MOVIES_API_URL;const placeholderImage='https://via.placeholder.com/150?text=Image+Unavailable';// Get the list of favorite movies from Redux state\nconst favoriteMovies=useSelector(state=>state.favoriteMovies.favorites);const dispatch=useDispatch();const fetchMovies=()=>{fetch(apiUrl).then(response=>response.json()).then(data=>{const sortedMovies=data.sort((a,b)=>b.rating-a.rating);setMovies(sortedMovies);}).catch(error=>console.error('Error:',error));};const toggleFavorite=id=>{const isFavorite=favoriteMovies.some(movie=>movie.id===id);if(isFavorite){dispatch(removeFromFavorites(id));}else{const selectedMovie=movies.find(movie=>movie.id===id);dispatch(addToFavorites(selectedMovie));}};useEffect(()=>{fetchMovies();},[]);return/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Movies\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"movies-list\",children:movies.map(movie=>/*#__PURE__*/_jsx(\"a\",{href:movie.imdb_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"movie-link\",children:/*#__PURE__*/_jsx(\"li\",{className:\"movie-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:movie.movie}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Rating: \",movie.rating]}),/*#__PURE__*/_jsx(\"img\",{src:movie.image_url,alt:movie.movie,onError:e=>e.target.src=placeholderImage,className:\"movie-image\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"a\",{href:movie.imdb_url,target:\"_blank\",rel:\"noopener noreferrer\",children:\"IMDb\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleFavorite(movie.id),children:favoriteMovies.some(favMovie=>favMovie.id===movie.id)?'Unfavorite':'Favorite'})})]})},movie.id)},movie.id))})]});};export default MoviesComponent;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addToFavorites","removeFromFavorites","jsx","_jsx","jsxs","_jsxs","MoviesComponent","movies","setMovies","apiUrl","process","env","REACT_APP_MOVIES_API_URL","placeholderImage","favoriteMovies","state","favorites","dispatch","fetchMovies","fetch","then","response","json","data","sortedMovies","sort","a","b","rating","catch","error","console","toggleFavorite","id","isFavorite","some","movie","selectedMovie","find","class","children","className","map","href","imdb_url","target","rel","src","image_url","alt","onError","e","onClick","favMovie"],"sources":["/home/rekha/Desktop/movieswebsite/src/components/MoviesComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToFavorites, removeFromFavorites } from '../redux/actions/favoriteActions';\nimport './MoviesComponent.css'; // Ensure this CSS file exists\n\nconst MoviesComponent = () => {\n  const [movies, setMovies] = useState([]);\n  const apiUrl = process.env.REACT_APP_MOVIES_API_URL;\n  const placeholderImage = 'https://via.placeholder.com/150?text=Image+Unavailable';\n\n  // Get the list of favorite movies from Redux state\n  const favoriteMovies = useSelector(state => state.favoriteMovies.favorites);\n  const dispatch = useDispatch();\n\n  const fetchMovies = () => {\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        const sortedMovies = data.sort((a, b) => b.rating - a.rating);\n        setMovies(sortedMovies);\n      })\n      .catch(error => console.error('Error:', error));\n  };\n\n  const toggleFavorite = (id) => {\n    const isFavorite = favoriteMovies.some(movie => movie.id === id);\n    if (isFavorite) {\n      dispatch(removeFromFavorites(id));\n    } else {\n      const selectedMovie = movies.find(movie => movie.id === id);\n      dispatch(addToFavorites(selectedMovie));\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n    <div class=\"container\">\n      <h1>Movies</h1>\n      <ul className=\"movies-list\">\n        {movies.map(movie => (\n          <a\n          key={movie.id}\n          href={movie.imdb_url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"movie-link\"\n         >\n          <li key={movie.id} className=\"movie-item\">\n            <div className=\"movie-details\">\n              <h2>{movie.movie}</h2>\n              <p>Rating: {movie.rating}</p>\n              <img \n                src={movie.image_url} \n                alt={movie.movie} \n                onError={(e) => e.target.src = placeholderImage}\n                className=\"movie-image\"\n              />\n              <div>\n                <a href={movie.imdb_url} target=\"_blank\" rel=\"noopener noreferrer\">IMDb</a>\n\n              </div>\n              <div>\n                <button onClick={() => toggleFavorite(movie.id)}>\n                  {favoriteMovies.some(favMovie => favMovie.id === movie.id) ? 'Unfavorite' : 'Favorite'}\n                </button>\n              </div>\n            </div>\n          </li>\n          </a>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}